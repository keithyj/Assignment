1. Summary of the Data and initial EDA

1.1 Summary
```{r Summary, echo = TRUE, eval = TRUE, message = FALSE, warning = FALSE}
summary(cancer)
# Checking the summary output, can spot missing values in PctEmployed16_Over
The minimum value in AvgHouseholdSize is very small and should be investigated.
```
1.2 Investigating AvgHouseholdSize
```{r Sus Plot, echo = FALSE, fig.cap = "\\label{fig:figs}deathRate vs AvgHouseholdSize", fig.asp = 0.5, eval = FALSE, message = FALSE, warning = FALSE}
plot(deathRate ~ AvgHouseholdSize, data = cancer, main = "deathRate against AvgHouseholdSize")
# Notice extremely small AvgHouseholdSize.
```

1.3 Missing values check

```{r remove miss, echo = FALSE, eval = TRUE, message = FALSE, warning = FALSE}
cancer2 <- na.omit(cancer1)
```

2. Univariate Plots
2.1 Analysis of deathrate

2.2 Histograms

```{r histograms notinclude, echo = FALSE, eval = TRUE, message = FALSE, warning = FALSE}
hist(cancer2$MedianAgeFemale, breaks = 30, main = "Histogram of Median Age of Females")
hist(cancer2$MedianAgeMale, breaks = 30, main = "Histogram of Median Age of Females")
hist(cancer2$PercentMarried, breaks = 30, main = "Histogram of Percent Married")
hist(cancer2$PctMarriedHouseholds, breaks = 30, main = "Histogram of PctMarriedHouseholds")
hist(cancer2$Edu18_24, breaks = 30, main = "Histogram of Edu18_24")
hist(cancer2$PctEmployed16_Over, breaks = 30, main = "Histogram of PctEmployed16_Over")
hist(cancer2$PctUnemployed16_Over, breaks = 30, main = "Histogram of PctUnemployed16_Over")
hist(cancer2$povertyPercent, breaks = 30, main = "Histogram of povertyPercent")
hist(cancer2$PctPrivateCoverage, breaks = 30, main = "Histogram of PctPrivateCoverage")
hist(cancer2$PctEmpPrivCoverage, breaks = 30, main = "Histogram of PctEmpPrivCoverage")
hist(cancer2$PctPublicCoverage, breaks = 30, main = "Histogram of PctPublicCoverage")
hist(cancer2$deathRate, breaks = 30, main = "Histogram of deathRate")
```

2.3 Transformed Histograms 
```{r Transformsdontinclude, fig.cap = "\\label{fig:figs}Our transformed histograms", fig.width=5, fig.asp=0.68, fig.align="center", echo = FALSE, eval = FALSE, message = FALSE, warning = FALSE}
par(mfrow = c(1,2))
hist(cancer2$PctPrivateCoverage^(2), breaks = 30, main = "Histogram of square of PctPrivateCoverage")
with(cancer2, hist(sqrt(PctUnemployed16_Over), main = "Transformed PctUnemployed16_Over"))
```

3. Bivariate Plots
3.1 Plots Against Death Rate

```{r Plots against deathRate not included, fig.cap = "\\label{fig:figs}Plots showing deathRate against other variables", fig.asp=0.46, fig.align="center", echo = FALSE, eval = TRUE, message = FALSE, warning = FALSE}
par(mfrow = c(3,4))
with(cancer2, scatter.smooth(deathRate~PctEmployed16_Over, ylab = "deathRate", xlab = "PctEmployed16_Over", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~PctUnemployed16_Over, ylab = "deathRate", xlab = "PctUnemployed16_Over", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~PercentMarried, ylab = "deathRate", xlab = "PercentMarried", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~PctMarriedHouseholds, ylab = "deathRate", xlab = "PctMarriedHouseholds", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~Edu18_24, ylab = "deathRate", xlab = "Edu18_24", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~binnedInc, ylab = "deathRate", xlab = "binnedInc", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~povertyPercent, ylab = "deathRate", xlab = "povertyPercent", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~PctPrivateCoverage, ylab = "deathRate", xlab = "PctPrivateCoverage", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~PctPublicCoverage, ylab = "deathRate", xlab = "PctPublicCoverage", lpars = list(col = "red", lwd = 2)))
with(cancer2, scatter.smooth(deathRate~PctEmpPrivCoverage, ylab = "deathRate", xlab = "PctEmpPrivCoverage", lpars = list(col = "red", lwd = 2)))
```

3.2 Box Plots & Outliers

```{r BoxPlotsnotincluded, fig.cap = "\\label{fig:figs}BoxPlots of our variables", fig.align="center", eval = TRUE, message = FALSE, warning = FALSE}
par(mfrow = c(4,4))
with(cancer2, boxplot(PctUnemployed16_Over, main = "PctUnemployed16_Over")) #Keep
with(cancer2, boxplot(deathRate, main = "deathRate")) # Keep
with(cancer2, boxplot(povertyPercent, main = "povertyPercent")) # Keep
with(cancer2, boxplot(AvgHouseholdSize, main = "AvgHouseholdSize"))
with(cancer2, boxplot(PctEmployed16_Over, main = "PctEmployed16_Over"))
with(cancer2, boxplot(MedianAgeFemale, main = "MedianAgeFemale"))
with(cancer2, boxplot(MedianAgeMale, main = "MedianAgeMale"))
with(cancer2, boxplot(binnedInc, main = "binnedInc"))
with(cancer2, boxplot(PercentMarried, main = "PercentMarried"))
with(cancer2, boxplot(PctMarriedHouseholds, main = "PctMarriedHouseholds"))
with(cancer2, boxplot(Edu18_24, main = "Edu18_24"))
with(cancer2, boxplot(PctPrivateCoverage, main = "PctPrivateCoverage"))
with(cancer2, boxplot(PctEmpPrivCoverage, main = "PctEmpPrivCoverage"))
with(cancer2, boxplot(PctPublicCoverage, main = "PctPublicCoverage"))
```
3.3 Multicollinearity

```{r, echo = FALSE, fig.cap = "A large plot containing densities, bivariate plots and correlations", eval = TRUE}
mod_points=function(data,mapping,...) {
  ggally_smooth_loess(data, mapping,pch=20, ...) +
    theme(text = element_text(size=8))
}  
mod_cor=function(data,mapping,...) {
  ggally_cor(data, mapping,size=1.5,align_percent=0.9, digits = 2) + scale_colour_manual(values = c("red", "blue")) + theme(panel.grid.major = element_blank(),...)
}
ggpairs(cancer2, columns = c(2:3, 5:18), mapping = aes(alpha = 0.6),
        upper = list(continuous=mod_cor),
        lower = list(continuous=wrap(mod_points, col = "red")),
        diag = list(continuous="densityDiag"),
        progress = FALSE) +
        theme(text=element_text(size=6))
```

```{r Income comparison, echo = FALSE, eval = FALSE, message = FALSE, warning = FALSE, fig.cap = "medIncome and binnedInc show very similar results. We will therefore consider only using medIncome in our model", fig.width = 7, fig.height = 4}
with(cancer2, plot(binnedInc, medIncome, main = "Comparison of medIncome and binnedInc", xlab = "binnedInc", ylab = "medIncome"))
```




